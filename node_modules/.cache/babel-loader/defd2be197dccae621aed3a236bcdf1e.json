{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OnLine\\\\shenime.front\\\\src\\\\components\\\\NoteModal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { NewNote, EditNote } from '../services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewNoteModal = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleShow,\n      classname: \"btn btn-success\",\n      children: \"New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NoteModal, {\n      note: null,\n      handleFormSubmit: NewNote,\n      show: show,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NewNoteModal, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = NewNoteModal;\nexport const EditNoteModal = ({\n  note\n}) => {\n  _s2();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleShow,\n      classname: \"btn btn-success\",\n      children: \"Edit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NoteModal, {\n      note: note,\n      handleFormSubmit: EditNote,\n      show: show,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(EditNoteModal, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c2 = EditNoteModal;\n\nconst NoteModal = ({\n  note,\n  handleFormSubmit,\n  show,\n  handleClose\n}) => {\n  _s3();\n\n  const [modalNote, setModalNote] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setModalNote(note);\n  }, [note]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Modal heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        handleFormSubmit(dispatch, modalNote);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            value: modalNote === null ? '' : modalNote,\n            onChange: event => setModalNote(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(NoteModal, \"AwI3pkBSJ4f/W0SeFLZM5HZpctw=\", false, function () {\n  return [useDispatch];\n});\n\n_c3 = NoteModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NewNoteModal\");\n$RefreshReg$(_c2, \"EditNoteModal\");\n$RefreshReg$(_c3, \"NoteModal\");","map":{"version":3,"sources":["C:/Users/OnLine/shenime.front/src/components/NoteModal.js"],"names":["React","useState","useEffect","useDispatch","Form","Modal","Button","InputGroup","FormControl","NewNote","EditNote","NewNoteModal","show","setShow","handleClose","handleShow","EditNoteModal","note","NoteModal","handleFormSubmit","modalNote","setModalNote","dispatch","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Form, Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { NewNote, EditNote } from '../services/notes';\r\n\r\nexport const NewNoteModal = () => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return <div>\r\n        <Button onClick={handleShow} classname='btn btn-success'>New Note</Button>\r\n        <NoteModal note={null} handleFormSubmit={NewNote} show={show} handleClose={handleClose} />\r\n    </div>\r\n}\r\n\r\nexport const EditNoteModal = ({note}) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return <div>\r\n        <Button onClick={handleShow} classname='btn btn-success'>Edit </Button>\r\n        <NoteModal note={note} handleFormSubmit={EditNote} show={show} handleClose={handleClose} />\r\n    </div>\r\n}\r\n\r\nconst NoteModal = ({note, handleFormSubmit, show, handleClose}) => {\r\n    const [modalNote, setModalNote] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setModalNote(note);\r\n    }, [note]);\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <form onSubmit={event => {\r\n              event.preventDefault();\r\n              handleFormSubmit(dispatch, modalNote);\r\n          }}>\r\n          <Modal.Body>\r\n              <InputGroup>\r\n                <FormControl value={modalNote === null ? '' : modalNote}\r\n                    onChange={event => setModalNote(event.target.value)} />\r\n              </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n            </Button>\r\n                <Button type='submit' variant=\"primary\" onClick={handleClose}>\r\n                Save \r\n            </Button>\r\n          </Modal.Footer>\r\n          </form>\r\n        </Modal>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}