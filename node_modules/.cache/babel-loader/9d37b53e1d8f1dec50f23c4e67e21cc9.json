{"ast":null,"code":"import { ActionCreators } from \"../redux/notesReducer\";\nimport * as axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'https://localhost:5001/notes'\n});\nexport const GetNotes = async dispatch => {\n  try {\n    //api call\n    const {\n      data\n    } = await axiosInstance.get();\n    dispatch(ActionCreators.setNotes(data));\n  } catch {\n    console.log('Error!!');\n  }\n};\n_c = GetNotes;\nexport const DeleteNote = async (dispatch, note) => {\n  try {\n    //api call\n    const {\n      data\n    } = await axiosInstance.delete(`/${note.id}`);\n    dispatch(ActionCreators.deleteNote(note));\n  } catch {\n    console.log('Error!!');\n  }\n};\n_c2 = DeleteNote;\nexport const NewNote = async (dispatch, note) => {\n  try {\n    //api call\n    const response = {\n      value: note,\n      id: 1\n    };\n    dispatch(ActionCreators.newNote(response));\n  } catch {\n    console.log('Error!!');\n  }\n};\n_c3 = NewNote;\nexport const EditNote = async (dispatch, note) => {\n  try {\n    //api call\n    const response = {\n      value: note,\n      id: 1\n    };\n    dispatch(ActionCreators.editNote(response));\n  } catch {\n    console.log('Error!!');\n  }\n};\n_c4 = EditNote;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GetNotes\");\n$RefreshReg$(_c2, \"DeleteNote\");\n$RefreshReg$(_c3, \"NewNote\");\n$RefreshReg$(_c4, \"EditNote\");","map":{"version":3,"sources":["C:/Users/OnLine/shenime.front/src/services/notes.js"],"names":["ActionCreators","axios","axiosInstance","create","baseURL","GetNotes","dispatch","data","get","setNotes","console","log","DeleteNote","note","delete","id","deleteNote","NewNote","response","value","newNote","EditNote","editNote"],"mappings":"AAAA,SAASA,cAAT,QAA+B,uBAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE;AADsB,CAAb,CAAtB;AAIA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACxC,MAAI;AACA;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,aAAa,CAACM,GAAd,EAAvB;AACAF,IAAAA,QAAQ,CAACN,cAAc,CAACS,QAAf,CAAwBF,IAAxB,CAAD,CAAR;AACH,GAJD,CAIE,MAAM;AACJG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,CARM;KAAMN,Q;AAUb,OAAO,MAAMO,UAAU,GAAG,OAAON,QAAP,EAAiBO,IAAjB,KAA0B;AAChD,MAAI;AACA;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAML,aAAa,CAACY,MAAd,CAAsB,IAAGD,IAAI,CAACE,EAAG,EAAjC,CAAvB;AACAT,IAAAA,QAAQ,CAACN,cAAc,CAACgB,UAAf,CAA0BH,IAA1B,CAAD,CAAR;AACH,GAJD,CAIE,MAAM;AACJH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,CARM;MAAMC,U;AAUb,OAAO,MAAMK,OAAO,GAAG,OAAOX,QAAP,EAAiBO,IAAjB,KAA0B;AAC7C,MAAI;AACA;AACA,UAAMK,QAAQ,GAAG;AAACC,MAAAA,KAAK,EAAEN,IAAR;AAAcE,MAAAA,EAAE,EAAC;AAAjB,KAAjB;AACAT,IAAAA,QAAQ,CAACN,cAAc,CAACoB,OAAf,CAAuBF,QAAvB,CAAD,CAAR;AACH,GAJD,CAIE,MAAM;AACJR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,CARM;MAAMM,O;AAUb,OAAO,MAAMI,QAAQ,GAAG,OAAOf,QAAP,EAAiBO,IAAjB,KAA0B;AAC9C,MAAI;AACA;AACA,UAAMK,QAAQ,GAAG;AAACC,MAAAA,KAAK,EAAEN,IAAR;AAAcE,MAAAA,EAAE,EAAC;AAAjB,KAAjB;AACAT,IAAAA,QAAQ,CAACN,cAAc,CAACsB,QAAf,CAAwBJ,QAAxB,CAAD,CAAR;AACH,GAJD,CAIE,MAAM;AACJR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,CARM;MAAMU,Q","sourcesContent":["import { ActionCreators } from \"../redux/notesReducer\";\r\nimport * as axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://localhost:5001/notes',\r\n})\r\n\r\nexport const GetNotes = async (dispatch) => {\r\n    try {\r\n        //api call\r\n        const { data } = await axiosInstance.get();\r\n        dispatch(ActionCreators.setNotes(data));\r\n    } catch {\r\n        console.log('Error!!');\r\n    }\r\n}\r\n\r\nexport const DeleteNote = async (dispatch, note) => {\r\n    try {\r\n        //api call\r\n        const { data } = await axiosInstance.delete(`/${note.id}`);\r\n        dispatch(ActionCreators.deleteNote(note));\r\n    } catch {\r\n        console.log('Error!!');\r\n    }\r\n}\r\n\r\nexport const NewNote = async (dispatch, note) => {\r\n    try {\r\n        //api call\r\n        const response = {value: note, id:1};\r\n        dispatch(ActionCreators.newNote(response));\r\n    } catch {\r\n        console.log('Error!!');\r\n    }\r\n}\r\n\r\nexport const EditNote = async (dispatch, note) => {\r\n    try {\r\n        //api call\r\n        const response = {value: note, id:1};\r\n        dispatch(ActionCreators.editNote(response));\r\n    } catch {\r\n        console.log('Error!!');\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}